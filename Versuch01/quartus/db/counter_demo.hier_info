|counter_demo
clock => sync_counter:sync_C.clock
clock => enableGen:ena_Gen.clk
key3_n => enableGen:ena_Gen.nReset
key3_n => sync_counter:sync_C.reset
hex0_n[0] <= segment_decoder:seg.hex0_n[0]
hex0_n[1] <= segment_decoder:seg.hex0_n[1]
hex0_n[2] <= segment_decoder:seg.hex0_n[2]
hex0_n[3] <= segment_decoder:seg.hex0_n[3]
hex0_n[4] <= segment_decoder:seg.hex0_n[4]
hex0_n[5] <= segment_decoder:seg.hex0_n[5]
hex0_n[6] <= segment_decoder:seg.hex0_n[6]
hex1_n[0] <= segment_decoder:seg.hex1_n[0]
hex1_n[1] <= segment_decoder:seg.hex1_n[1]
hex1_n[2] <= segment_decoder:seg.hex1_n[2]
hex1_n[3] <= segment_decoder:seg.hex1_n[3]
hex1_n[4] <= segment_decoder:seg.hex1_n[4]
hex1_n[5] <= segment_decoder:seg.hex1_n[5]
hex1_n[6] <= segment_decoder:seg.hex1_n[6]


|counter_demo|sync_counter:sync_C
clock => ff_jk:ff:0:f.clk
clock => ff_jk:ff:1:f.clk
clock => ff_jk:ff:2:f.clk
clock => ff_jk:ff:3:f.clk
clock_enable => ff_jk:ff:0:f.ena
clock_enable => ff_jk:ff:1:f.ena
clock_enable => ff_jk:ff:2:f.ena
clock_enable => ff_jk:ff:3:f.ena
reset => ff_jk:ff:0:f.clrn
reset => ff_jk:ff:1:f.clrn
reset => ff_jk:ff:2:f.clrn
reset => ff_jk:ff:3:f.clrn
q[0] <= ff_jk:ff:0:f.q
q[1] <= ff_jk:ff:1:f.q
q[2] <= ff_jk:ff:2:f.q
q[3] <= ff_jk:ff:3:f.q


|counter_demo|sync_counter:sync_C|ff_jk:\ff:0:f
j => jkffe_inst.IN0
k => jkffe_inst.IN0
clk => jkffe_inst.CLK
ena => jkffe_inst.ENA
clrn => jkffe_inst.ACLR
prn => jkffe_inst.PRESET
q <= jkffe_inst.DB_MAX_OUTPUT_PORT_TYPE


|counter_demo|sync_counter:sync_C|ff_jk:\ff:1:f
j => jkffe_inst.IN0
k => jkffe_inst.IN0
clk => jkffe_inst.CLK
ena => jkffe_inst.ENA
clrn => jkffe_inst.ACLR
prn => jkffe_inst.PRESET
q <= jkffe_inst.DB_MAX_OUTPUT_PORT_TYPE


|counter_demo|sync_counter:sync_C|ff_jk:\ff:2:f
j => jkffe_inst.IN0
k => jkffe_inst.IN0
clk => jkffe_inst.CLK
ena => jkffe_inst.ENA
clrn => jkffe_inst.ACLR
prn => jkffe_inst.PRESET
q <= jkffe_inst.DB_MAX_OUTPUT_PORT_TYPE


|counter_demo|sync_counter:sync_C|ff_jk:\ff:3:f
j => jkffe_inst.IN0
k => jkffe_inst.IN0
clk => jkffe_inst.CLK
ena => jkffe_inst.ENA
clrn => jkffe_inst.ACLR
prn => jkffe_inst.PRESET
q <= jkffe_inst.DB_MAX_OUTPUT_PORT_TYPE


|counter_demo|enableGen:ena_Gen
resetValue_in[0] => resetValue_in[0]~I.PADIO
resetValue_in[1] => resetValue_in[1]~I.PADIO
resetValue_in[2] => resetValue_in[2]~I.PADIO
resetValue_in[3] => resetValue_in[3]~I.PADIO
resetValue_in[4] => resetValue_in[4]~I.PADIO
resetValue_in[5] => resetValue_in[5]~I.PADIO
resetValue_in[6] => resetValue_in[6]~I.PADIO
resetValue_in[7] => resetValue_in[7]~I.PADIO
resetValue_in[8] => resetValue_in[8]~I.PADIO
resetValue_in[9] => resetValue_in[9]~I.PADIO
resetValue_in[10] => resetValue_in[10]~I.PADIO
resetValue_in[11] => resetValue_in[11]~I.PADIO
resetValue_in[12] => resetValue_in[12]~I.PADIO
resetValue_in[13] => resetValue_in[13]~I.PADIO
resetValue_in[14] => resetValue_in[14]~I.PADIO
resetValue_in[15] => resetValue_in[15]~I.PADIO
resetValue_in[16] => resetValue_in[16]~I.PADIO
resetValue_in[17] => resetValue_in[17]~I.PADIO
resetValue_in[18] => resetValue_in[18]~I.PADIO
resetValue_in[19] => resetValue_in[19]~I.PADIO
resetValue_in[20] => resetValue_in[20]~I.PADIO
resetValue_in[21] => resetValue_in[21]~I.PADIO
resetValue_in[22] => resetValue_in[22]~I.PADIO
resetValue_in[23] => resetValue_in[23]~I.PADIO
resetValue_in[24] => resetValue_in[24]~I.PADIO
resetValue_in[25] => resetValue_in[25]~I.PADIO
clk => clk~I.PADIO
nReset => nReset~I.PADIO
clkEnable_out <= clkEnable_out~I.PADIO


|counter_demo|segment_decoder:seg
data[0] => Mux0.IN19
data[0] => Mux1.IN19
data[0] => Mux2.IN19
data[0] => Mux3.IN19
data[0] => Mux4.IN19
data[0] => Mux5.IN19
data[0] => Mux6.IN19
data[1] => Mux0.IN18
data[1] => Mux1.IN18
data[1] => Mux2.IN18
data[1] => Mux3.IN18
data[1] => Mux4.IN18
data[1] => Mux5.IN18
data[1] => Mux6.IN18
data[1] => Mux7.IN10
data[1] => Mux8.IN10
data[1] => Mux9.IN10
data[1] => Mux10.IN10
data[2] => Mux0.IN17
data[2] => Mux1.IN17
data[2] => Mux2.IN17
data[2] => Mux3.IN17
data[2] => Mux4.IN17
data[2] => Mux5.IN17
data[2] => Mux6.IN17
data[2] => Mux7.IN9
data[2] => Mux8.IN9
data[2] => Mux9.IN9
data[2] => Mux10.IN9
data[3] => Mux0.IN16
data[3] => Mux1.IN16
data[3] => Mux2.IN16
data[3] => Mux3.IN16
data[3] => Mux4.IN16
data[3] => Mux5.IN16
data[3] => Mux6.IN16
data[3] => Mux7.IN8
data[3] => Mux8.IN8
data[3] => Mux9.IN8
data[3] => Mux10.IN8
hex0_n[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
hex0_n[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
hex0_n[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
hex0_n[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
hex0_n[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
hex0_n[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
hex0_n[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
hex1_n[0] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
hex1_n[1] <= <GND>
hex1_n[2] <= <GND>
hex1_n[3] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
hex1_n[4] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
hex1_n[5] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
hex1_n[6] <= <VCC>


