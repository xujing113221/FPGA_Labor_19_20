library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity sync_counter_func_normal is
    port(
        clock : in std_ulogic;
        clock_enable : in std_ulogic;
        reset : in std_ulogic;
        --
        q : out std_logic_vector(3 downto 0)
    );
end sync_counter_func_normal;


architecture rtl of sync_counter_func_normal is
signal q_out : std_logic_vector(3 downto 0);
signal q_out_next: std_logic_vector(3 downto 0);

begin
	process(clock, reset)
	begin
		if reset = '1' then
			q_out <= (others => '0');
		elsif rising_edge(clock) then
			q_out <= q_out_next;
			q <= q_out;
		end if;
	end process;
	
	process
	begin
		if clock_enable = '1' rhen
			if q_out_ < 15 then
				q_out_next <= q_out + 1;
			else q_out_next <= (others => '0');
			end if;
		end if;
	end process;
	
end architecture;